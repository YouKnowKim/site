plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.yonseidairy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web & JDBC
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	
	implementation 'com.google.code.gson:gson:2.9.0'
	
	// Lombok 의존성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	// MyBatis Starter
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

	// Oracle JDBC
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

	// 개발 편의 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// npm install
task appNpmInstall(type: NpmTask) {
	workingDir = file("${project.projectDir}/frontend")
	args = ["install"]
}

// npm build
task npmBuild(type: NpmTask) {
	workingDir = file("${project.projectDir}/frontend")
	args = ["run", "build"]
}

// 빌드된 결과 이동
task copyWebApp(type: Copy) {
	from "frontend/build"
	into 'build/resources/main/static/'
}

npmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn npmBuild
compileJava.dependsOn copyWebApp
