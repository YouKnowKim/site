<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.yonseidairy.site.mapper.RegionMapper">

    <select id="selectAllRegions" parameterType="RegionDao" resultType="RegionDao">
        SELECT
	      A.CUSTNO AS code,
	      A.CUSTNAME AS name,
	      A.POLYGON_COORDS,
	      B.ADDR AS addr,
	      B.ADDR_1 AS gubun,
	      B.PHONE_MOBILE1 AS tel
	    FROM
	      REGION_LOCATION A,
	      CD_CUSTOMER B
	    WHERE
	      B.OFFICE_ID = 'YSM'
	      AND A.CUSTNO = B.CUSTNO
	      AND A.GUBUN_TYPE = #{gubunType, jdbcType=VARCHAR}
    </select>
    
    <select id="selectRegions" parameterType="RegionDao" resultType="RegionDao">
        SELECT
	        A.id AS id,
	        A.custname AS custname,
	        NVL(A.custno, '거래처코드없음') AS custno,
	        A.latitude AS lat,
	        A.longitude AS lng,
	        A.polygon_coords as polygon_coords,
	        NVL(B.TEL, ' ') AS tel,
	        NVL(F_GET_EMP_NAME('YSM', F_GET_SALES_MAN('YSM', A.CUSTNO)), ' ') AS salesMan,
	        F_GET_DEPT_NAME('YSM', F_GET_DEPT_CODE('YSM', F_GET_SALES_MAN('YSM', A.CUSTNO), SYSDATE)) AS deptName,
	        NVL(B.ADDR_1, '미지정') AS CATEGORY1,
	        NVL(B.ADDR_2, '미지정') AS CATEGORY2,
	        B.PHONE_MOBILE1 AS phoneMobile1,
	        B.PHONE_MOBILE2 AS phoneMobile2,
	        F_GET_EMP_MOBILE_NBR('YSM', F_GET_SALES_MAN('YSM', A.CUSTNO)) AS mobileNbr,
	        C.OPEN_TIME as openTime
	    FROM REGION_LOCATION A
	         LEFT JOIN CD_CUSTOMER B 
	                ON A.CUSTNO = B.CUSTNO 
	         	   AND B.OFFICE_ID = 'YSM'
	         LEFT JOIN SALE.CD_CUSTOMER_CRM C 
	                ON A.CUSTNO = C.CUSTNO
	    WHERE A.GUBUN_TYPE = #{gubunType, jdbcType=VARCHAR}         
    </select>
    
    <select id="selectAddressCategories" parameterType="RegionDao" resultType="RegionDao">
        SELECT ADDR_1 AS CATEGORY1
        	 , ADDR_2 AS CATEGORY2 
		  FROM APPS.ADDR_CODE
    </select>
    
    <select id="selectAllRegionsForAddress" parameterType="RegionDao" resultType="RegionDao">
        SELECT
	      A.CUSTNO AS code,
	      A.CUSTNAME AS name,
	      A.POLYGON_COORDS,
	      B.ADDR AS addr,
	      B.ADDR_1 AS gubun,
	      B.PHONE_MOBILE1 AS tel
	    FROM
	      REGION_LOCATION A,
	      CD_CUSTOMER B
	    WHERE
	      B.OFFICE_ID = 'YSM'
	      AND A.CUSTNO = B.CUSTNO
	      AND A.GUBUN_TYPE = #{gubunType, jdbcType=VARCHAR}
    </select>
    
    <select id="selectCheckSabun" parameterType="RegionDao" resultType="RegionDao">
        SELECT COUNT(*) AS cnt 
          FROM APPS.PF_EMPLOYEE 
         WHERE EMP_CODE = #{sabun, jdbcType=VARCHAR}
    </select>
    
    <select id="selectRegionSaveStatus" parameterType="RegionDao" resultType="RegionDao">
	  SELECT A.CUSTNO as custno,
	         A.CUSTNAME as custname,
	         CASE WHEN NVL(B.CUSTNO, 'N') = 'N' THEN 'N' ELSE 'Y' END AS saveYn,
	         NVL(F_GET_EMP_NAME('YSM', F_GET_SALES_MAN('YSM', A.CUSTNO)), ' ') AS salesMan
	  FROM APPS.CD_CUSTOMER A
	  LEFT JOIN (
	    SELECT DISTINCT CUSTNO
	    FROM APPS.REGION_LOCATION
	    WHERE GUBUN_TYPE = #{gubunType}
	  ) B
	    ON A.CUSTNO = B.CUSTNO
	  WHERE
	    A.OFFICE_ID = 'YSM'
	    AND NVL(A.HANDLE, '0') = #{gubunType}
	    AND NVL(A.USE_YNO, 'N') = 'Y'
	    <if test="gubunType == '10'">
	      AND A.CUSTNO LIKE 'A10%'
	    </if>
	  ORDER BY
	    NVL(F_GET_EMP_NAME('YSM', F_GET_SALES_MAN('YSM', A.CUSTNO)), ' '),
	    CASE WHEN NVL(B.CUSTNO, 'N') = 'N' THEN 'N' ELSE 'Y' END
	</select>
	
	<insert id="insertRegion" parameterType="RegionDao">
	  INSERT INTO region_location 
	  (CUSTNO
	  , CUSTNAME
	  , latitude
	  , longitude
	  , POLYGON_COORDS
	  , GUBUN_TYPE) VALUES 
	  (#{custNo}
	  , #{custName}
	  , #{centerLat}
	  , #{centerLng}
	  , #{polygonCoords},
	    #{gubunType})
	</insert>
	
	<update id="updateRegion" parameterType="RegionDao">
	  UPDATE region_location
	  SET CUSTNO = #{custNo}
	    , CUSTNAME = #{custName}
	    , LATITUDE = #{centerLat}
	    , LONGITUDE = #{centerLng}
	  WHERE ID = #{regionId}
	</update>
	
	<select id="selectForDelete" parameterType="RegionDao" resultType="RegionDao">
	  SELECT CUSTNO as custNo
		   , CUSTNAME as custName
		   , LATITUDE as latitude
		   , LONGITUDE AS longitude
		   , POLYGON_COORDS as polygon_coords
	   	FROM REGION_LOCATION
	   WHERE ID = #{regionId}
	     AND GUBUN_TYPE = #{gubunType}
	</select>
	
	<delete id="deleteRegion" parameterType="RegionDao">
	  DELETE FROM REGION_LOCATION 
	   WHERE ID = #{regionId} 
	     AND GUBUN_TYPE = #{gubunType}
	</delete>
	
	<insert id="insertLog" parameterType="RegionDao">
	  INSERT INTO APPS.REGION_LOCATION_LOG
	  (UPDATE_DATE,
	   TYPE,
	   SABUN,
	   ID,
	   CUSTNO,
	   CUSTNAME,
	   LATITUDE,
	   LONGITUDE,
	   POLYGON_COORDS,
	   GUBUN_TYPE)
	  VALUES (SYSDATE,
	  		  #{gubunType},
	  		  #{type},
	  		  #{sabun},
	  		  #{regionId},
	  		  #{custNo},
	  		  #{custName},
	  		  #{latitude},
	  		  #{longitude},
	  		  #{polygon_coords}) 
	</insert>

</mapper>