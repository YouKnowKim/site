plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'com.yonseidairy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web & JDBC
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	
	implementation 'com.google.code.gson:gson:2.9.0'
	
	// Lombok 의존성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	// MyBatis Starter
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

	// Oracle JDBC
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

	// 개발 편의 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// ✅ Node 플러그인 설정
node {
    version = '18.18.0'
    npmVersion = '11.4.2'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

import com.github.gradle.node.npm.task.NpmTask // ✅ 꼭 필요!

// ✅ npm install
tasks.register('appNpmInstall', NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['install']
}

// ✅ npm build
tasks.register('npmBuild', NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'build']
    dependsOn 'appNpmInstall'
}

// ✅ build 결과물 복사
tasks.register('copyWebApp', Copy) {
    from "frontend/build"
    into 'build/resources/main/static/'
    dependsOn 'npmBuild'
}

// ✅ Spring 빌드에 연결
tasks.named('compileJava') {
    dependsOn 'copyWebApp'
}

// ✅ 테스트 설정
tasks.named('test') {
    useJUnitPlatform()
}
